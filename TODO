DataCompare:
	- review if NLV is needed with DBMS_CRYPTO.Hash call and check if orahash is faster. Check STANDARD_HASH
	avg(length(standard_hash(column))) is 4.5x faster than dbms_crypto.hash(utl_raw.cast_to_raw(column),3) if column is varchar2(8 char)
	
	

DbCompare: 
	- in case comparison is done using PK (or some column in smaller degree) the majority of processing time is spent on sending data through the network
		and comparing in DbCompare script. If CPU on server running DbCompare is not a constraint we can start comparison of next table/partition
		just after first rows are received from the (last) compared database. It may be limited/connected somehow with DbCompare parallelism.

	- add parallelism in case multiple tables/partitions - may be implemented as fork, parallel writing of output should be resolved 

	- it there is no PK nor UK on table it could be skipped, can this be changed to all columns like in GG replication?

	- add posibility to choose dedicated mode for connection

	- remap partitions? partitions --remap [db2=][schema1.][tablename1]{PART1}:[schema2.][tablename2]{PART1,PART2}

	- change dbms_crypto.hash(utl_raw.cast_to_raw(column),3) to standard_hash(column), should give 10x improvement, (check for big varchars)
		works for varchar2, number,date,timestamp. sys_op_combined_hash works ok on simple types as well.
	

	- add HTML reports
	cat ~/campaigns/release-status.html | mail -s "$(echo -e "Release Status [Green]\nContent-Type: text/html")" to.address@company.com -v
	cat ~/campaigns/release-status.html | mail -s "Release Status [Green]" -a "Content-Type: text/html" to.address@company.com
	/usr/sbin/sendmail -t to.address@company.com <__END__
	To: to.address@company.com
	Subject: test4
	Content-Type: text/html
	MIME-Version: 1.0

	This is a test
	<b>dddd</b>
	<hr>
	__END__


DataSync:

	- create script that takes output from DbCompare/DataCompare and synchronizes reported rows
